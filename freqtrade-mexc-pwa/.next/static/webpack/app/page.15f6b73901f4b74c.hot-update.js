"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/hooks/useMEXCData.ts":
/*!**********************************!*\
  !*** ./src/hooks/useMEXCData.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMEXCData: function() { return /* binding */ useMEXCData; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* __next_internal_client_entry_do_not_use__ useMEXCData auto */ \n// MEXC Public API endpoints\nconst MEXC_API_BASE = \"https://api.mexc.com/api/v3\";\nconst useMEXCData = (pair)=>{\n    const [ticker, setTicker] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [orderBook, setOrderBook] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [candles, setCandles] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    // Convert pair format (ETH/USDT -> ETHUSDT)\n    const mexcSymbol = pair.replace(\"/\", \"\");\n    // Fetch real MEXC ticker data\n    const fetchRealTicker = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (symbol)=>{\n        try {\n            // Get 24hr ticker statistics\n            const response = await fetch(\"\".concat(MEXC_API_BASE, \"/ticker/24hr?symbol=\").concat(symbol));\n            if (!response.ok) {\n                throw new Error(\"MEXC API error: \".concat(response.status));\n            }\n            const data = await response.json();\n            return {\n                symbol: pair,\n                price: parseFloat(data.lastPrice),\n                change: parseFloat(data.priceChange),\n                changePercent: parseFloat(data.priceChangePercent),\n                high24h: parseFloat(data.highPrice),\n                low24h: parseFloat(data.lowPrice),\n                volume24h: parseFloat(data.volume),\n                lastUpdate: Date.now()\n            };\n        } catch (error) {\n            console.error(\"Error fetching MEXC ticker:\", error);\n            return null;\n        }\n    }, [\n        pair\n    ]);\n    // Fetch real MEXC order book data\n    const fetchRealOrderBook = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (symbol)=>{\n        try {\n            const response = await fetch(\"\".concat(MEXC_API_BASE, \"/depth?symbol=\").concat(symbol, \"&limit=10\"));\n            if (!response.ok) {\n                throw new Error(\"MEXC API error: \".concat(response.status));\n            }\n            const data = await response.json();\n            return {\n                symbol: pair,\n                bids: data.bids.map((bid)=>[\n                        parseFloat(bid[0]),\n                        parseFloat(bid[1])\n                    ]),\n                asks: data.asks.map((ask)=>[\n                        parseFloat(ask[0]),\n                        parseFloat(ask[1])\n                    ]),\n                lastUpdate: Date.now()\n            };\n        } catch (error) {\n            console.error(\"Error fetching MEXC orderbook:\", error);\n            return null;\n        }\n    }, [\n        pair\n    ]);\n    // Fetch real MEXC kline/candle data\n    const fetchRealCandles = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (symbol)=>{\n        try {\n            const response = await fetch(\"\".concat(MEXC_API_BASE, \"/klines?symbol=\").concat(symbol, \"&interval=1m&limit=100\"));\n            if (!response.ok) {\n                throw new Error(\"MEXC API error: \".concat(response.status));\n            }\n            const data = await response.json();\n            return data.map((kline)=>({\n                    timestamp: parseInt(kline[0]),\n                    open: parseFloat(kline[1]),\n                    high: parseFloat(kline[2]),\n                    low: parseFloat(kline[3]),\n                    close: parseFloat(kline[4]),\n                    volume: parseFloat(kline[5])\n                }));\n        } catch (error) {\n            console.error(\"Error fetching MEXC candles:\", error);\n            return [];\n        }\n    }, []);\n    // Initial data fetch\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const fetchAllData = async ()=>{\n            setLoading(true);\n            setError(null);\n            try {\n                const [tickerData, orderBookData, candleData] = await Promise.all([\n                    fetchRealTicker(mexcSymbol),\n                    fetchRealOrderBook(mexcSymbol),\n                    fetchRealCandles(mexcSymbol)\n                ]);\n                if (tickerData) setTicker(tickerData);\n                if (orderBookData) setOrderBook(orderBookData);\n                setCandles(candleData);\n            } catch (err) {\n                setError(err instanceof Error ? err.message : \"Failed to fetch MEXC data\");\n            } finally{\n                setLoading(false);\n            }\n        };\n        fetchAllData();\n    }, [\n        mexcSymbol,\n        fetchRealTicker,\n        fetchRealOrderBook,\n        fetchRealCandles\n    ]);\n    // Real-time updates every 2 seconds\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const interval = setInterval(async ()=>{\n            try {\n                const tickerData = await fetchRealTicker(mexcSymbol);\n                if (tickerData) {\n                    setTicker(tickerData);\n                }\n            } catch (error) {\n                console.error(\"Error updating ticker:\", error);\n            }\n        }, 2000);\n        return ()=>clearInterval(interval);\n    }, [\n        mexcSymbol,\n        fetchRealTicker\n    ]);\n    // Extract commonly used values\n    const price = ticker === null || ticker === void 0 ? void 0 : ticker.price;\n    const change = ticker === null || ticker === void 0 ? void 0 : ticker.change;\n    const changePercent = ticker === null || ticker === void 0 ? void 0 : ticker.changePercent;\n    const volume24h = ticker === null || ticker === void 0 ? void 0 : ticker.volume24h;\n    const high24h = ticker === null || ticker === void 0 ? void 0 : ticker.high24h;\n    const low24h = ticker === null || ticker === void 0 ? void 0 : ticker.low24h;\n    return {\n        // Raw data\n        ticker,\n        orderBook,\n        candles,\n        // Extracted values\n        price,\n        change,\n        changePercent,\n        volume24h,\n        high24h,\n        low24h,\n        // State\n        loading,\n        error,\n        // Methods\n        refresh: ()=>{\n            setLoading(true);\n        // Trigger re-fetch by updating a dependency\n        }\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useMEXCData.ts\n"));

/***/ })

});